version: '3.8'

networks:
  hodei-network:
    driver: bridge

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hodei-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=hodei
      - POSTGRES_PASSWORD=hodei_pass
      - POSTGRES_DB=hodei_permissions
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hodei"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - hodei-network

  # Hodei Server with PostgreSQL
  hodei-server-postgres:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_TYPE: postgres
    container_name: hodei-server-postgres
    ports:
      - "50052:50051"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://hodei:hodei_pass@postgres:5432/hodei_permissions
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 5s
    networks:
      - hodei-network

  # TODO App with PostgreSQL
  todo-app-postgres:
    build:
      context: .
      dockerfile: examples/todo-app/Dockerfile
      args:
        DATABASE_TYPE: postgres
    container_name: todo-app-postgres
    ports:
      - "3001:3000"
    environment:
      - HODEI_ENDPOINT=http://hodei-server-postgres:50051
      - DATABASE_URL=postgresql://hodei:hodei_pass@postgres:5432/todo_app
      - RUST_LOG=info
    depends_on:
      hodei-server-postgres:
        condition: service_healthy
    networks:
      - hodei-network

volumes:
  postgres-data:
